
[
{name:'T.ajax',desc:'',link:'tangram',interfaces:
[
{name:'T.ajax.form',desc:'将一个表单用ajax方式提交',meta:'',shortcut:''},
{name:'T.ajax.get',desc:'发送一个get请求',meta:'standard',shortcut:''},
{name:'T.ajax.post',desc:'发送一个post请求',meta:'standard',shortcut:''},
{name:'T.ajax.request',desc:'发送一个ajax请求',meta:'standard',shortcut:''}
]
},
{name:'T.array',desc:'',link:'tangram',interfaces:
[
{name:'T.array.contains',desc:'判断一个数组中是否包含给定元素',meta:'',shortcut:''},
{name:'T.array.each',desc:'遍历数组中所有元素',meta:'standard',shortcut:'each'},
{name:'T.array.empty',desc:'清空一个数组',meta:'',shortcut:''},
{name:'T.array.every',desc:'判断一个数组中是否所有元素都满足给定条件',meta:'',shortcut:''},
{name:'T.array.filter',desc:'从数组中筛选符合条件的元素',meta:'standard',shortcut:''},
{name:'T.array.find',desc:'从数组中寻找符合条件的第一个元素',meta:'',shortcut:''},
{name:'T.array.hash',desc:'将两个数组参数合并成一个类似hashMap结构的对象，这个对象使用第一个数组做为key，使用第二个数组做为值，如果第二个参数未指定，则把对象的所有值置为true。',meta:'',shortcut:''},
{name:'T.array.indexOf',desc:'查询数组中指定元素的索引位置',meta:'',shortcut:''},
{name:'T.array.lastIndexOf',desc:'从后往前，查询数组中指定元素的索引位置',meta:'',shortcut:''},
{name:'T.array.map',desc:'遍历数组中所有元素，将每一个元素应用方法进行转换，并返回转换后的新数组。',meta:'',shortcut:''},
{name:'T.array.reduce',desc:'遍历数组中所有元素，将每一个元素应用方法进行合并，并返回合并后的结果。',meta:'',shortcut:''},
{name:'T.array.remove',desc:'移除数组中的项',meta:'standard',shortcut:''},
{name:'T.array.removeAt',desc:'移除数组中的项',meta:'standard',shortcut:''},
{name:'T.array.some',desc:'判断一个数组中是否有部分元素满足给定条件',meta:'',shortcut:''},
{name:'T.array.unique',desc:'过滤数组中的相同项。如果两个元素相同，会删除后一个元素。',meta:'',shortcut:''}
]
},
{name:'T.async',desc:'',link:'tangram',interfaces:
[
{name:'T.async.get',desc:'支持异步的ajax.get封装.',meta:'',shortcut:''},
{name:'T.async.post',desc:'支持异步的ajax.post封装.',meta:'',shortcut:''},
{name:'T.async.when',desc:'保证onResolve或onReject可以按序执行. 若第一个参数为deferred,则deferred完成后执行.否则立即执行onResolve,并传入第一个参数.',meta:'',shortcut:''}
]
},
{name:'T.browser',desc:'',link:'tangram',interfaces:
[

]
},
{name:'T.cookie',desc:'',link:'tangram',interfaces:
[
{name:'T.cookie.get',desc:'获取cookie的值，用decodeURIComponent进行解码',meta:'standard',shortcut:''},
{name:'T.cookie.getRaw',desc:'获取cookie的值，不对值进行解码',meta:'standard',shortcut:''},
{name:'T.cookie.remove',desc:'删除cookie的值',meta:'standard',shortcut:''},
{name:'T.cookie.set',desc:'设置cookie的值，用encodeURIComponent进行编码',meta:'standard',shortcut:''},
{name:'T.cookie.setRaw',desc:'设置cookie的值，不对值进行编码',meta:'standard',shortcut:''}
]
},
{name:'T.date',desc:'',link:'tangram',interfaces:
[
{name:'T.date.format',desc:'对目标日期对象进行格式化',meta:'',shortcut:''},
{name:'T.date.parse',desc:'将目标字符串转换成日期对象',meta:'',shortcut:''}
]
},
{name:'T.dom',desc:'',link:'tangram',interfaces:
[
{name:'T.dom.addClass',desc:'为目标元素添加className',meta:'standard',shortcut:'addClass'},
{name:'T.dom.children',desc:'获取目标元素的直接子元素列表',meta:'standard',shortcut:''},
{name:'T.dom.contains',desc:'判断一个元素是否包含另一个元素',meta:'standard',shortcut:''},
{name:'T.dom.create',desc:'创建 Element 对象。',meta:'standard',shortcut:''},
{name:'T.dom.ddManager',desc:'拖曳管理器',meta:'',shortcut:''},
{name:'T.dom.drag',desc:'拖动指定的DOM元素',meta:'',shortcut:''},
{name:'T.dom.draggable',desc:'让一个DOM元素可拖拽',meta:'',shortcut:''},
{name:'T.dom.droppable',desc:'让一个DOM元素可以容纳被拖拽的DOM元素',meta:'',shortcut:''},
{name:'T.dom.empty',desc:'删除一个节点下面的所有子节点。',meta:'',shortcut:''},
{name:'T.dom.first',desc:'获取目标元素的第一个元素节点',meta:'standard',shortcut:''},
{name:'T.dom.fixable',desc:'使目标元素拥有可进行与页面可见区域相对位置保持不变的移动的能力',meta:'',shortcut:''},
{name:'T.dom.g',desc:'从文档中获取指定的DOM元素',meta:'standard',shortcut:'g,T.G'},
{name:'T.dom.getAncestorBy',desc:'获取目标元素符合条件的最近的祖先元素',meta:'',shortcut:''},
{name:'T.dom.getAncestorByClass',desc:'获取目标元素指定元素className最近的祖先元素',meta:'',shortcut:''},
{name:'T.dom.getAncestorByTag',desc:'获取目标元素指定标签的最近的祖先元素',meta:'',shortcut:''},
{name:'T.dom.getAttr',desc:'获取目标元素的属性值',meta:'standard',shortcut:'getAttr'},
{name:'T.dom.getComputedStyle',desc:'获取目标元素的computed style值。如果元素的样式值不能被浏览器计算，则会返回空字符串（IE）',meta:'',shortcut:''},
{name:'T.dom.getDocument',desc:'获取目标元素所属的document对象',meta:'standard',shortcut:''},
{name:'T.dom.getParent',desc:'获得元素的父节点',meta:'',shortcut:''},
{name:'T.dom.getPosition',desc:'获取目标元素相对于整个文档左上角的位置',meta:'standard',shortcut:''},
{name:'T.dom.getStyle',desc:'获取目标元素的样式值',meta:'standard',shortcut:'getStyle'},
{name:'T.dom.getText',desc:'获得元素中的文本内容。',meta:'',shortcut:''},
{name:'T.dom.getWindow',desc:'获取目标元素所属的window对象',meta:'',shortcut:''},
{name:'T.dom.hasAttr',desc:'查询一个元素是否包含指定的属性',meta:'',shortcut:''},
{name:'T.dom.hasClass',desc:'判断元素是否拥有指定的className',meta:'standard',shortcut:''},
{name:'T.dom.hide',desc:'隐藏目标元素',meta:'standard',shortcut:'hide'},
{name:'T.dom.insertAfter',desc:'将目标元素添加到基准元素之后',meta:'standard',shortcut:''},
{name:'T.dom.insertBefore',desc:'将目标元素添加到基准元素之前',meta:'standard',shortcut:''},
{name:'T.dom.insertHTML',desc:'在目标元素的指定位置插入HTML代码',meta:'standard',shortcut:'insertHTML'},
{name:'T.dom.intersect',desc:'检查两个元素是否相交',meta:'',shortcut:''},
{name:'T.dom.last',desc:'获取目标元素的最后一个元素节点',meta:'',shortcut:''},
{name:'T.dom.next',desc:'获取目标元素的下一个兄弟元素节点',meta:'standard',shortcut:''},
{name:'T.dom.prev',desc:'获取目标元素的上一个兄弟元素节点',meta:'',shortcut:''},
{name:'T.dom.q',desc:'通过className获取元素',meta:'standard',shortcut:'q,T.Q'},
{name:'T.dom.query',desc:'提供css选择器功能   选择器支持所有的<a href="http://www.w3.org/TR/css3-selectors/">css3选择器</a> ，核心实现采用sizzle。T.dom.query.matches 请参考<a href="http://wiki.github.com/jeresig/sizzle/" target="_blank">sizzle 文档</a>',meta:'',shortcut:''},
{name:'T.dom.ready',desc:'使函数在页面dom节点加载完毕时调用',meta:'standard',shortcut:''},
{name:'T.dom.remove',desc:'从DOM树上移除目标元素',meta:'standard',shortcut:''},
{name:'T.dom.removeClass',desc:'移除目标元素的className',meta:'standard',shortcut:'removeClass'},
{name:'T.dom.removeStyle',desc:'删除元素的某个样式',meta:'',shortcut:''},
{name:'T.dom.resizable',desc:'绘制可以根据鼠标行为改变HTMLElement大小的resize handle',meta:'',shortcut:''},
{name:'T.dom.setAttr',desc:'设置目标元素的attribute值',meta:'standard',shortcut:'setAttr'},
{name:'T.dom.setAttrs',desc:'批量设置目标元素的attribute值',meta:'standard',shortcut:'setAttrs'},
{name:'T.dom.setBorderBoxHeight',desc:'按照border-box模型设置元素的height值',meta:'',shortcut:'dom.setOuterHeight'},
{name:'T.dom.setBorderBoxSize',desc:'按照border-box模型设置元素的height和width值。只支持元素的padding/border/height/width使用同一种计量单位的情况。<br/> 不支持：<br/> 1. 非数字值(medium)<br/> 2. em/px在不同的属性中混用',meta:'',shortcut:''},
{name:'T.dom.setBorderBoxWidth',desc:'按照border-box模型设置元素的width值',meta:'',shortcut:'dom.setOuterWidth'},
{name:'T.dom.setPosition',desc:'设置目标元素的top和left值到用户指定的位置',meta:'',shortcut:''},
{name:'T.dom.setStyle',desc:'设置目标元素的style样式值',meta:'standard',shortcut:'setStyle'},
{name:'T.dom.setStyles',desc:'批量设置目标元素的style样式值',meta:'standard',shortcut:'setStyles'},
{name:'T.dom.show',desc:'显示目标元素，即将目标元素的display属性还原成默认值。默认值可能在stylesheet中定义，或者是继承了浏览器的默认样式值',meta:'standard',shortcut:'show'},
{name:'T.dom.toggle',desc:'改变目标元素的显示/隐藏状态',meta:'standard',shortcut:''},
{name:'T.dom.toggleClass',desc:'添加或者删除一个节点中的指定class，如果已经有就删除，否则添加',meta:'',shortcut:''}
]
},
{name:'T.element',desc:'',link:'tangram',interfaces:
[
{name:'T.element.each',desc:'以每一个匹配的元素作为上下文执行传递进来的函数，方便用户自行遍历dom。',meta:'',shortcut:''},
{name:'T.element.events',desc:'方法提供了事件绑定的快捷方式，事件发生时会触发传递进来的函数。events代指事件方法的总和。',meta:'',shortcut:''},
{name:'T.element.extend',desc:'为element对象扩展一个方法。',meta:'',shortcut:'e'}
]
},
{name:'T.event',desc:'键盘事件的键值',link:'tangram',interfaces:
[
{name:'T.event.EventArg',desc:'事件对象构造器，屏蔽浏览器差异的事件类',meta:'standard',shortcut:''},
{name:'T.event.fire',desc:'触发已经注册的事件。注：在ie下不支持load和unload事件',meta:'',shortcut:''},
{name:'T.event.get',desc:'获取扩展的EventArg对象',meta:'standard',shortcut:''},
{name:'T.event.getKeyCode',desc:'获取键盘事件的键值',meta:'',shortcut:''},
{name:'T.event.getPageX',desc:'获取鼠标事件的鼠标x坐标',meta:'',shortcut:''},
{name:'T.event.getPageY',desc:'获取鼠标事件的鼠标y坐标',meta:'',shortcut:''},
{name:'T.event.getTarget',desc:'获取事件的触发元素',meta:'standard',shortcut:''},
{name:'T.event.on',desc:'为目标元素添加事件监听器',meta:'standard',shortcut:'on'},
{name:'T.event.once',desc:'为目标元素添加一次事件绑定',meta:'',shortcut:''},
{name:'T.event.preventDefault',desc:'阻止事件的默认行为',meta:'standard',shortcut:''},
{name:'T.event.stop',desc:'停止事件',meta:'',shortcut:''},
{name:'T.event.stopPropagation',desc:'阻止事件传播',meta:'',shortcut:''},
{name:'T.event.un',desc:'为目标元素移除事件监听器',meta:'standard',shortcut:'un'}
]
},
{name:'T.fn',desc:'',link:'tangram',interfaces:
[
{name:'T.fn.abstractMethod',desc:'定义一个抽象方法',meta:'',shortcut:''},
{name:'T.fn.bind',desc:'为对象绑定方法和作用域',meta:'',shortcut:''},
{name:'T.fn.blank',desc:'这是一个空函数，用于需要排除函数作用域链干扰的情况.',meta:'standard',shortcut:''},
{name:'T.fn.methodize',desc:'将一个静态函数变换成一个对象的方法，使其的第一个参数为this，或this[attr]',meta:'',shortcut:''},
{name:'T.fn.multize',desc:'对函数进行集化，使其在第一个参数为array时，结果也返回一个数组',meta:'',shortcut:''},
{name:'T.fn.wrapReturnValue',desc:'包装函数的返回值，使其在能按照index指定的方式返回。<br/>如果其值为-1，直接返回返回值。 <br/>如果其值为0，返回"返回值"的包装结果。<br/> 如果其值大于0，返回第i个位置的参数的包装结果（从1开始计数）',meta:'',shortcut:''}
]
},
{name:'T.json',desc:'',link:'tangram',interfaces:
[
{name:'T.json.decode',desc:'将字符串解析成json对象，为过时接口，今后会被T.json.parse代替',meta:'out',shortcut:''},
{name:'T.json.encode',desc:'将json对象序列化，为过时接口，今后会被T.json.stringify代替',meta:'out',shortcut:''},
{name:'T.json.parse',desc:'将字符串解析成json对象。注：不会自动祛除空格',meta:'standard',shortcut:''},
{name:'T.json.stringify',desc:'将json对象序列化',meta:'standard',shortcut:''}
]
},
{name:'T.lang',desc:'',link:'tangram',interfaces:
[
{name:'T.lang.createClass',desc:'创建一个类，包括创造类的构造器、继承基类Class',meta:'',shortcut:''},
{name:'T.lang.createSingle',desc:'创建一个T.lang.Class的单例实例',meta:'',shortcut:''},
{name:'T.lang.decontrol',desc:'解除instance中对指定类实例的引用关系。',meta:'',shortcut:''},
{name:'T.lang.getModule',desc:'根据变量名或者命名空间来查找对象',meta:'',shortcut:''},
{name:'T.lang.guid',desc:'返回一个当前页面的唯一标识字符串。',meta:'standard',shortcut:''},
{name:'T.lang.inherits',desc:'为类型构造器建立继承关系',meta:'standard',shortcut:'inherits'},
{name:'T.lang.instance',desc:'根据参数(guid)的指定，返回对应的实例对象引用',meta:'standard',shortcut:''},
{name:'T.lang.isArray',desc:'判断目标参数是否Array对象',meta:'standard',shortcut:''},
{name:'T.lang.isBoolean',desc:'判断目标参数是否Boolean对象',meta:'',shortcut:''},
{name:'T.lang.isDate',desc:'判断目标参数是否为Date对象',meta:'',shortcut:''},
{name:'T.lang.isElement',desc:'判断目标参数是否为Element对象',meta:'standard',shortcut:''},
{name:'T.lang.isFunction',desc:'判断目标参数是否为function或Function实例',meta:'standard',shortcut:''},
{name:'T.lang.isNumber',desc:'判断目标参数是否number类型或Number对象',meta:'standard',shortcut:''},
{name:'T.lang.isObject',desc:'判断目标参数是否为Object对象',meta:'standard',shortcut:'isObject'},
{name:'T.lang.isString',desc:'判断目标参数是否string类型或String对象',meta:'standard',shortcut:'isString'},
{name:'T.lang.module',desc:'增加自定义模块扩展,默认创建在当前作用域',meta:'standard',shortcut:''},
{name:'T.lang.toArray',desc:'将一个变量转换成array',meta:'standard',shortcut:''}
]
},
{name:'T.number',desc:'',link:'tangram',interfaces:
[
{name:'T.number.comma',desc:'为目标数字添加逗号分隔',meta:'',shortcut:''},
{name:'T.number.pad',desc:'对目标数字进行0补齐处理',meta:'',shortcut:''},
{name:'T.number.randomInt',desc:'生成随机整数，范围是[min, max]',meta:'',shortcut:''}
]
},
{name:'T.object',desc:'',link:'tangram',interfaces:
[
{name:'T.object.clone',desc:'对一个object进行深度拷贝',meta:'standard',shortcut:''},
{name:'T.object.each',desc:'遍历Object中所有元素，1.1.1增加',meta:'',shortcut:''},
{name:'T.object.extend',desc:'将源对象的所有属性拷贝到目标对象中',meta:'standard',shortcut:'extend'},
{name:'T.object.isEmpty',desc:'检测一个对象是否是空的.
需要注意的是：
如果污染了Object.prototype或者Array.prototype，那么
T.object.isEmpty({})或者
T.object.isEmpty([])可能返回的就是false.',meta:'',shortcut:''},
{name:'T.object.isPlain',desc:'判断一个对象是不是字面量对象，即判断这个对象是不是由{}或者new Object类似方式创建',meta:'',shortcut:''},
{name:'T.object.keys',desc:'获取目标对象的键名列表',meta:'',shortcut:''},
{name:'T.object.map',desc:'遍历object中所有元素，将每一个元素应用方法进行转换，返回转换后的新object。',meta:'',shortcut:''},
{name:'T.object.merge',desc:'合并源对象的属性到目标对象。',meta:'',shortcut:''},
{name:'T.object.values',desc:'获取目标对象的值列表',meta:'',shortcut:''}
]
},
{name:'T.page',desc:'',link:'tangram',interfaces:
[
{name:'T.page.createStyleSheet',desc:'在页面中创建样式表对象',meta:'',shortcut:''},
{name:'T.page.getHeight',desc:'获取页面高度',meta:'',shortcut:''},
{name:'T.page.getMousePosition',desc:'获得页面里的目前鼠标所在的坐标',meta:'',shortcut:''},
{name:'T.page.getScrollLeft',desc:'获取横向滚动量',meta:'',shortcut:''},
{name:'T.page.getScrollTop',desc:'获取纵向滚动量',meta:'standard',shortcut:''},
{name:'T.page.getViewHeight',desc:'获取页面视觉区域高度',meta:'standard',shortcut:''},
{name:'T.page.getViewWidth',desc:'获取页面视觉区域宽度',meta:'',shortcut:''},
{name:'T.page.getWidth',desc:'获取页面宽度',meta:'standard',shortcut:''},
{name:'T.page.lazyLoadImage',desc:'延迟加载图片. 默认只加载可见高度以上的图片, 随着窗口滚动加载剩余图片.注意: 仅支持垂直方向.',meta:'',shortcut:''},
{name:'T.page.load',desc:'加载一组资源，支持多种格式资源的串/并行加载，支持每个文件有单独回调函数。',meta:'',shortcut:''},
{name:'T.page.loadCssFile',desc:'动态在页面上加载一个外部css文件',meta:'',shortcut:''},
{name:'T.page.loadJsFile',desc:'动态在页面上加载一个外部js文件',meta:'',shortcut:''}
]
},
{name:'T.platform',desc:'',link:'tangram',interfaces:
[

]
},
{name:'T.sio',desc:'',link:'tangram',interfaces:
[
{name:'T.sio.callByBrowser',desc:'通过script标签加载数据，加载完成由浏览器端触发回调',meta:'standard',shortcut:''},
{name:'T.sio.callByServer',desc:'通过script标签加载数据，加载完成由服务器端触发回调',meta:'standard',shortcut:''},
{name:'T.sio.log',desc:'通过请求一个图片的方式令服务器存储一条日志
author: int08h,leeight',meta:'',shortcut:''}
]
},
{name:'T.string',desc:'',link:'tangram',interfaces:
[
{name:'T.string.decodeHTML',desc:'对目标字符串进行html解码',meta:'standard',shortcut:'decodeHTML'},
{name:'T.string.encodeHTML',desc:'对目标字符串进行html编码',meta:'standard',shortcut:'encodeHTML'},
{name:'T.string.escapeReg',desc:'将目标字符串中可能会影响正则表达式构造的字符串进行转义。',meta:'standard',shortcut:''},
{name:'T.string.filterFormat',desc:'对目标字符串进行格式化,支持过滤',meta:'',shortcut:''},
{name:'T.string.format',desc:'对目标字符串进行格式化',meta:'standard',shortcut:'format'},
{name:'T.string.formatColor',desc:'将各种浏览器里的颜色值转换成 #RRGGBB 的格式',meta:'',shortcut:''},
{name:'T.string.getByteLength',desc:'获取目标字符串在gbk编码下的字节长度',meta:'standard',shortcut:''},
{name:'T.string.stripTags',desc:'去掉字符串中的html标签',meta:'',shortcut:''},
{name:'T.string.subByte',desc:'对目标字符串按gbk编码截取字节长度',meta:'',shortcut:''},
{name:'T.string.toCamelCase',desc:'将目标字符串进行驼峰化处理',meta:'standard',shortcut:''},
{name:'T.string.toHalfWidth',desc:'将目标字符串中常见全角字符转换成半角字符',meta:'',shortcut:''},
{name:'T.string.trim',desc:'删除目标字符串两端的空白字符',meta:'standard',shortcut:'trim'},
{name:'T.string.wbr',desc:'为目标字符串添加wbr软换行',meta:'',shortcut:''}
]
},
{name:'T.swf',desc:'',link:'tangram',interfaces:
[
{name:'T.swf.create',desc:'在页面中创建一个flash对象',meta:'standard',shortcut:''},
{name:'T.swf.createHTML',desc:'创建flash对象的html字符串',meta:'standard',shortcut:''},
{name:'T.swf.getMovie',desc:'获得flash对象的实例',meta:'standard',shortcut:''},
{name:'T.swf.Proxy',desc:'Js 调用 Flash方法的代理类.',meta:'',shortcut:''}
]
},
{name:'T.url',desc:'',link:'tangram',interfaces:
[
{name:'T.url.escapeSymbol',desc:'对字符串进行%&+/#=和空格七个字符进行url转义',meta:'',shortcut:''},
{name:'T.url.getQueryValue',desc:'根据参数名从目标URL中获取参数值',meta:'standard',shortcut:''},
{name:'T.url.jsonToQuery',desc:'将json对象解析成query字符串',meta:'',shortcut:''},
{name:'T.url.queryToJson',desc:'解析目标URL中的参数成json对象',meta:'',shortcut:''}
]
}
]
